name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Update version
        run: echo ${{ github.event.release.tag_name }} | xargs npm version --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
          
  build-for-release:
    needs: release
    runs-on: ${{ matrix.run.os }}
    strategy:
      matrix:
        run:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64
    env:
      BUILD_PLATFORM: ${{ matrix.run.platform }}
      BUILD_ARCH: ${{ matrix.run.arch }}
      
    steps:
      - name: Get portable executable path
        run: |
          if [ "$BUILD_PLATFORM" = "windows" ]; then
            echo "ARTIFACT_PATH=build/github-action-viewer-${{ github.event.release.tag_name }}-${{ BUILD_PLATFORM }}-${{ BUILD_ARCH }}.tar.gz" >> $GITHUB_ENV
          else
            echo "ARTIFACT_PATH=build/github-action-viewer-${{ github.event.release.tag_name }}-${{ BUILD_PLATFORM }}-${{ BUILD_ARCH }}" >> $GITHUB_ENV
          fi
        shell: bash
        
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Make build script executable
        run: chmod +x ./buildForRelease.sh

      - name: Build for release
        run: ./buildForRelease.sh -p ${{ env.BUILD_PLATFORM }} -a ${{ env.BUILD_ARCH }} -v ${{ github.event.release.tag_name }}
        shell: bash
      
      - name: Upload portable executable
        uses: actions/upload-artifact@v4
        with:
          name: github-action-viewer-${{ env.BUILD_PLATFORM }}-${{ env.BUILD_ARCH }}-${{ github.event.release.tag_name }}
          path: ${{ env.ARTIFACT_PATH }}
          if-no-files-found: error

  attach-to-release:
    name: Attach Artifacts to Release
    needs: build-for-release
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: ls -R artifacts

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
